{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useForecast = () => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [city, setCity] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => {\n      const forecastData = {\n        ...data.city,\n        list: data.list.slice(0, 16)\n      };\n      setForecast(forecastData);\n    });\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    term,\n    options,\n    forecast,\n    onInputChange,\n    onOptionSelect,\n    onSubmit\n  };\n};\n_s(useForecast, \"e32d+/vEJXra7VJZtjMUld4iZ60=\");\nexport default useForecast;","map":{"version":3,"names":["useState","useEffect","useForecast","_s","term","setTerm","city","setCity","options","setOptions","forecast","setForecast","getSearchOptions","value","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","onInputChange","e","target","getForecast","lat","lon","forecastData","list","slice","onSubmit","onOptionSelect","option","name"],"sources":["D:/React/weather-app-react-ts-twcss/starter-files/src/hooks/useForecast.ts"],"sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react'\r\n\r\nimport { optionType, forecastType } from '../types'\r\n\r\nconst useForecast = () => {\r\n  const [term, setTerm] = useState<string>('')\r\n  const [city, setCity] = useState<optionType | null>(null)\r\n  const [options, setOptions] = useState<[]>([])\r\n  const [forecast, setForecast] = useState<forecastType | null>(null)\r\n\r\n  const getSearchOptions = (value: string) => {\r\n    fetch(\r\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${\r\n        process.env.REACT_APP_API_KEY\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setOptions(data))\r\n  }\r\n\r\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim()\r\n    setTerm(value)\r\n\r\n    if (value === '') return\r\n\r\n    getSearchOptions(value)\r\n  }\r\n\r\n  const getForecast = (city: optionType) => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n      const forecastData = {\r\n        ...data.city,\r\n        list:data.list.slice(0, 16)\r\n      }  \r\n        setForecast(forecastData)\r\n      })\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (!city) return\r\n\r\n    getForecast(city)\r\n  }\r\n\r\n  const onOptionSelect = (option: optionType) => {\r\n    setCity(option)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      setTerm(city.name)\r\n      setOptions([])\r\n    }\r\n  }, [city])\r\n\r\n \r\nreturn{\r\n  term, options, forecast, onInputChange, onOptionSelect, onSubmit\r\n}\r\n}\r\n\r\nexport default useForecast\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAIxD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAsB,IAAI,CAAC;EAEnE,MAAMY,gBAAgB,GAAIC,KAAa,IAAK;IAC1CC,KAAK,CACF,kDAAiDD,KAAK,CAACE,IAAI,CAAC,CAAE,kBAC7DC,OAAO,CAACC,GAAG,CAACC,iBACb,EACH,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKb,UAAU,CAACa,IAAI,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IAC1D,MAAMX,KAAK,GAAGW,CAAC,CAACC,MAAM,CAACZ,KAAK,CAACE,IAAI,CAAC,CAAC;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAElBD,gBAAgB,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMa,WAAW,GAAIpB,IAAgB,IAAK;IACxCQ,KAAK,CACF,wDAAuDR,IAAI,CAACqB,GAAI,QAAOrB,IAAI,CAACsB,GAAI,uBAAsBZ,OAAO,CAACC,GAAG,CAACC,iBAAkB,EACvI,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MAChB,MAAMO,YAAY,GAAG;QACnB,GAAGP,IAAI,CAAChB,IAAI;QACZwB,IAAI,EAACR,IAAI,CAACQ,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MAC5B,CAAC;MACCpB,WAAW,CAACkB,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAAC1B,IAAI,EAAE;IAEXoB,WAAW,CAACpB,IAAI,CAAC;EACnB,CAAC;EAED,MAAM2B,cAAc,GAAIC,MAAkB,IAAK;IAC7C3B,OAAO,CAAC2B,MAAM,CAAC;EACjB,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,IAAIK,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAAC6B,IAAI,CAAC;MAClB1B,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAGZ,OAAM;IACJF,IAAI;IAAEI,OAAO;IAAEE,QAAQ;IAAEa,aAAa;IAAEU,cAAc;IAAED;EAC1D,CAAC;AACD,CAAC;AAAA7B,EAAA,CA5DKD,WAAW;AA8DjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}