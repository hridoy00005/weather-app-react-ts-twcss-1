{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\weather-app-react-ts-twcss\\\\starter-files\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Search from './components/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [city, setCity] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setForecast(data));\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n\n  //http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\",\n    children: forecast ? 'We have a forecast' : /*#__PURE__*/_jsxDEV(Search, {\n      term: term,\n      options: options,\n      onInputChange: onInputChange,\n      onOptionSelect: onOptionSelect,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"e32d+/vEJXra7VJZtjMUld4iZ60=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Search","jsxDEV","_jsxDEV","App","_s","term","setTerm","city","setCity","options","setOptions","forecast","setForecast","getSearchOptions","value","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","getForecast","lat","lon","onSubmit","name","onInputChange","e","target","onOptionSelect","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/weather-app-react-ts-twcss/starter-files/src/App.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from 'react'\r\nimport { optionType } from './types'\r\nimport Search from './components/Search'\r\n\r\nconst App = (): JSX.Element => {\r\n  const [term, setTerm] = useState<string>('')\r\n  const [city, setCity] = useState<optionType | null>(null)\r\n  const [options, setOptions] = useState<[]>([])\r\n  const [forecast, setForecast] = useState<null>(null)\r\n\r\n  const getSearchOptions = (value: string) => {\r\n    fetch(\r\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${\r\n        process.env.REACT_APP_API_KEY\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setOptions(data))\r\n  }\r\n\r\n  const getForecast = (city: optionType) => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setForecast(data))\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (!city) return\r\n\r\n    getForecast(city)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      setTerm(city.name)\r\n      setOptions([])\r\n    }\r\n  }, [city])\r\n\r\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim()\r\n    setTerm(value)\r\n\r\n    if (value === '') return\r\n\r\n    getSearchOptions(value)\r\n  }\r\n\r\n  const onOptionSelect = (option: optionType) => {\r\n    setCity(option)\r\n  }\r\n\r\n  //http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}\r\n  return (\r\n    <main className=\"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\">\r\n      {forecast ? (\r\n        'We have a forecast'\r\n      ) : (\r\n        <Search\r\n          term={term}\r\n          options={options}\r\n          onInputChange={onInputChange}\r\n          onOptionSelect={onOptionSelect}\r\n          onSubmit={onSubmit}\r\n        />\r\n      )}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAO,IAAI,CAAC;EAEpD,MAAMc,gBAAgB,GAAIC,KAAa,IAAK;IAC1CC,KAAK,CACF,kDAAiDD,KAAK,CAACE,IAAI,CAAC,CAAE,kBAC7DC,OAAO,CAACC,GAAG,CAACC,iBACb,EACH,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKb,UAAU,CAACa,IAAI,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,WAAW,GAAIjB,IAAgB,IAAK;IACxCQ,KAAK,CACF,uDAAsDR,IAAI,CAACkB,GAAI,QAAOlB,IAAI,CAACmB,GAAI,uBAAsBT,OAAO,CAACC,GAAG,CAACC,iBAAkB,EACtI,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKX,WAAW,CAACW,IAAI,CAAC,CAAC;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACpB,IAAI,EAAE;IAEXiB,WAAW,CAACjB,IAAI,CAAC;EACnB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAACqB,IAAI,CAAC;MAClBlB,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMsB,aAAa,GAAIC,CAAgC,IAAK;IAC1D,MAAMhB,KAAK,GAAGgB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAACE,IAAI,CAAC,CAAC;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAElBD,gBAAgB,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMkB,cAAc,GAAIC,MAAkB,IAAK;IAC7CzB,OAAO,CAACyB,MAAM,CAAC;EACjB,CAAC;;EAED;EACA,oBACE/B,OAAA;IAAMgC,SAAS,EAAC,2GAA2G;IAAAC,QAAA,EACxHxB,QAAQ,GACP,oBAAoB,gBAEpBT,OAAA,CAACF,MAAM;MACLK,IAAI,EAAEA,IAAK;MACXI,OAAO,EAAEA,OAAQ;MACjBoB,aAAa,EAAEA,aAAc;MAC7BG,cAAc,EAAEA,cAAe;MAC/BL,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAAnC,EAAA,CAlEKD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAoET,eAAeA,GAAG;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}